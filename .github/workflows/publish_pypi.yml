# This file is autogenerated by maturin v1.9.4
# To update, run
#
#    maturin generate-ci -m spnl/Cargo.toml github
#
name: publish_pypi

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
          #- runner: ubuntu-22.04
          #  target: s390x
          - runner: ubuntu-22.04
            target: ppc64le
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Download maturin-action
        run: mkdir -p maturin-action/dist && cd maturin-action && cd dist && curl -LO https://raw.githubusercontent.com/PyO3/maturin-action/refs/heads/main/dist/index.js && cd .. && curl -LO https://raw.githubusercontent.com/PyO3/maturin-action/refs/heads/main/action.yml
      - name: Build wheels
        uses: ./maturin-action #PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter --manifest-path spnl/Cargo.toml --no-default-features -F tok,run_py
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: 2_28
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  # TODO: get openssl
  # musllinux:
  #   runs-on: ${{ matrix.platform.runner }}
  #   strategy:
  #     matrix:
  #       platform:
  #         - runner: ubuntu-22.04
  #           target: x86_64
  #         - runner: ubuntu-22.04
  #           target: x86
  #         - runner: ubuntu-22.04
  #           target: aarch64
  #         - runner: ubuntu-22.04
  #           target: armv7
  #   steps:
  #     - uses: actions/checkout@v5
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: 3.x
  #     - name: Download maturin-action
  #       run: mkdir -p maturin-action/dist && cd maturin-action && cd dist && curl -LO https://raw.githubusercontent.com/PyO3/maturin-action/refs/heads/main/dist/index.js && cd .. && curl -LO https://raw.githubusercontent.com/PyO3/maturin-action/refs/heads/main/action.yml
  #     - name: Build wheels
  #       uses: ./maturin-action #PyO3/maturin-action@v1
  #       with:
  #         target: ${{ matrix.platform.target }}
  #         args: --release --out dist --find-interpreter --manifest-path spnl/Cargo.toml
  #         sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
  #         manylinux: auto #musllinux_1_2
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: wheels-musllinux-${{ matrix.platform.target }}
  #         path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
          #- runner: windows-latest # <-- cannot install python, and no pythons are found in the hosted tool cache
          #  target: arm64 # Note: not aarch64 unlike linux and macos
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Download maturin-action
        run: mkdir -p maturin-action/dist && cd maturin-action && cd dist && curl -LO https://raw.githubusercontent.com/PyO3/maturin-action/refs/heads/main/dist/index.js && cd .. && curl -LO https://raw.githubusercontent.com/PyO3/maturin-action/refs/heads/main/action.yml
      - name: Build wheels
        uses: ./maturin-action #PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter --manifest-path spnl/Cargo.toml --no-default-features -F tok,run_py
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Download maturin-action
        run: mkdir -p maturin-action/dist && cd maturin-action && cd dist && curl -LO https://raw.githubusercontent.com/PyO3/maturin-action/refs/heads/main/dist/index.js && cd .. && curl -LO https://raw.githubusercontent.com/PyO3/maturin-action/refs/heads/main/action.yml
      - name: Build wheels
        uses: ./maturin-action #PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter --manifest-path spnl/Cargo.toml --no-default-features -F tok,run_py
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Download maturin-action
        run: mkdir -p maturin-action/dist && cd maturin-action && cd dist && curl -LO https://raw.githubusercontent.com/PyO3/maturin-action/refs/heads/main/dist/index.js && cd .. && curl -LO https://raw.githubusercontent.com/PyO3/maturin-action/refs/heads/main/action.yml
      - name: Build sdist
        uses: ./maturin-action #PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist --manifest-path spnl/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [linux, windows, macos, sdist] # musllinux
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    environment:
      name: pypi
      url: https://pypi.org/p/spnl
    steps:
      - uses: actions/download-artifact@v5
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'wheels-*/*'
      - name: Download maturin-action
        run: mkdir -p maturin-action/dist && cd maturin-action && cd dist && curl -LO https://raw.githubusercontent.com/PyO3/maturin-action/refs/heads/main/dist/index.js && cd .. && curl -LO https://raw.githubusercontent.com/PyO3/maturin-action/refs/heads/main/action.yml
      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: ./maturin-action #PyO3/maturin-action@v1
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
